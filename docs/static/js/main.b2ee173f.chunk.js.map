{"version":3,"sources":["auth/AuthContext.js","routers/PrivateRoute.js","routers/PublicRoute.js","types/types.js","components/ui/NavBar.js","controllers/ListControl.js","components/home/HomeScreen.js","components/account/AccountScreen.js","components/languages/LanguageScreen.js","components/certificates/CertificatesScreen.js","components/progress/ProgressScreen.js","components/information/InformationScreen.js","components/units/UnitsScreen.js","components/courses/CoursesScreen.js","routers/DashboardRoutes.js","components/footer/FooterMain.js","components/start/StartScreen.js","controllers/basicAuth.js","components/login/LoginScreen.js","hooks/useForm.js","controllers/registerUser.js","components/register/RegisterScreen.js","routers/DashboardPublicRoutes.js","routers/AppRouter.js","auth/authReducer.js","App.js","reportWebVitals.js","index.js"],"names":["AuthContext","createContext","PrivateRoute","isAuthenticated","Component","component","rest","localStorage","setItem","location","pathname","props","to","PublicRoute","types","Navbar","useContext","name","user","dispatch","history","useHistory","logo","className","href","src","alt","subNavigation","onClick","replace","type","ellipsis","missingImage","ListControl","offset","limit","path","path_type","path_id","useState","loading","setLoading","error","setError","list","setList","hasMore","setHasMore","paths_type","sendQuery","useCallback","a","jwt","getItem","axios","get","process","res","prev","data","length","useEffect","HomeScreen","query","setQuery","loader","useRef","observer","handleObserver","node","current","disconnect","IntersectionObserver","entries","isIntersecting","observe","console","log","lists","JSON","stringify","map","course","state_name","name_course","ref","id","image_course","disCourse","AccountScreen","LanguageScreen","CertificatesScreen","ProgressScreen","InformationScreen","UnitsScreen","cursoId","useParams","parse","disableLink","image_unit","CoursesScreen","cursoNombre","setCursoNombre","imgCourse","setImgCourse","undefined","find","o","description_course","DashboardRoutes","exact","FooterMain","logoExtended","StartScreen","e","currentTarget","classList","remove","add","signIn","userName","userPassword","post","response","LoginScreen","useLocation","queryString","search","q","initialState","values","setValues","handleInputChange","target","value","useForm","formValues","document","getElementById","style","display","onSubmit","preventDefault","btnIngreso","lastPath","userNameErr","userPasswordErr","then","payload","token","access_token","catch","warn","placeholder","autoComplete","onChange","invalid","message","invalidText","required","registerUser","userEmail","userDni","userConfPassword","RegisterScreen","userNameMain","userEmailMain","userPasswordMain","userConfPasswordMain","userDniMain","invalidMessage","DashboardPublicRoutes","AppRouter","logged","authReducer","state","action","removeItem","init","App","useReducer","Provider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b2ee173f.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nexport const AuthContext = createContext();","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n// Private Route for authenticated users\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n    \n    localStorage.setItem('lastPath', rest.location.pathname);\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/auth/login\" /> )\n            )}\n        \n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n// Public Route for all users\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( !isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/home\" /> )\n            )}\n        \n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","\n// Types use for login\nexport const types = {\n    login:  '[auth] login',\n    logout: '[auth] logout',\n}","import React, { useContext } from 'react';\nimport { useHistory,Link } from 'react-router-dom';\nimport { AuthContext } from '../../auth/AuthContext';\nimport { types } from '../../types/types';\n\nimport { Button,User } from \"@wfp/ui\";\n  import {\n    MainNavigation,\n    MainNavigationItem,\n    SubNavigation,\n    SubNavigationHeader,\n    SubNavigationLink\n  } from \"@wfp/ui\";\n// Navigation component\nexport const Navbar = () => {\n\n    const { user:{ name }, dispatch } = useContext(AuthContext);\n    const history = useHistory();\n\n    const handleLogout = () => {\n\n        history.replace('/auth/login');\n\n        dispatch({\n            type: types.logout\n        });\n    }\n\n\n    return (\n       \n        <MainNavigation \n        logo={<div className=\"wfp--main-navigation__logo\"><Link href=\"/home\"><img src=\"/assets/idWFP.png\" alt=\"menu logo\" className=\"menu-img\" /></Link><span className=\"menu-title\">EDUFAMI</span></div>}\n        >\n            <MainNavigationItem>\n                <Link \n                    to=\"/home\"\n                >\n                Cursos\n                </Link>\n            </MainNavigationItem>\n            <MainNavigationItem>\n                <Link \n                    to=\"/account\"\n                >\n                    Mis Datos\n                </Link>\n            </MainNavigationItem>\n            <MainNavigationItem>\n                <Link \n                    to=\"/lenguages\"\n                >\n                    Mi Lengua \n                </Link>\n            </MainNavigationItem>\n            <MainNavigationItem>\n                <Link \n                    to=\"/certificates\"\n                >\n                    Mis Certificados \n                </Link>\n            </MainNavigationItem>\n            <MainNavigationItem>\n                <Link \n                    to=\"/progress\"\n                >\n                    Mi Progreso\n                </Link>\n            </MainNavigationItem>\n            <hr className=\"dropdown-divider\"/>\n            <MainNavigationItem>\n                <Link \n                    to=\"/information\"\n                >\n                    Información EDUFAMI\n                </Link>\n            </MainNavigationItem>\n            <MainNavigationItem\n                className=\"wfp--main-navigation__user\"\n                subNavigation={\n                <SubNavigation>\n                    <SubNavigationHeader>\n                        <SubNavigationLink>\n                            <Button className=\"nav-item nav-link btn\"\n                                onClick={ handleLogout }\n                            > \n                                Cerrar Sesión\n                            </Button>\n                        </SubNavigationLink>\n                    </SubNavigationHeader>\n                    \n                </SubNavigation>\n                }>\n                <User\n                ellipsis\n                name={ name }\n                missingImage=\"letter\"\n                />\n            </MainNavigationItem>\n\n        </MainNavigation>\n    )\n}\n","import { useState, useEffect, useCallback } from \"react\";\nimport axios from \"axios\";\n// List products with Api\nexport default function  ListControl (offset, limit, path, path_type=\"\", path_id=\"\")  {\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(false);\n    const [list, setList] = useState([]);\n    const [hasMore, setHasMore] = useState(false);\n    const paths_type = (path_type)?'&'+path_type+'='+path_id : '';\n    \n    const sendQuery = useCallback(async () => {\n        let jwt = localStorage.getItem('userToken');\n        try {\n            const res = await axios.get(\n                process.env.REACT_APP_ADMIN_API_URL + \"/\"+ path + \"?offset=\"+offset+\"&limit=\"+limit+paths_type,\n                {\n                    \"headers\": {\n                        \"Authorization\": \"Bearer \" + jwt\n                    }\n                }\n            );\n            setList((prev) => [...prev, ...res.data.data]);\n            setLoading(false);\n            if (res.data.data.length < limit) {\n                setHasMore(false)\n            }\n            else {\n                setHasMore(true)\n            }\n        } catch (err) {\n          setError(err);\n          throw error;\n        }\n      }, [offset, error, limit, path, paths_type]);\n    \n      useEffect(() => {\n        sendQuery();\n      }, [offset, sendQuery]);\n      return { loading, error, list, hasMore };\n};","import React, {useContext, useState, useRef, useCallback} from 'react'\nimport { Breadcrumb , BreadcrumbHome, BreadcrumbItem } from \"@wfp/ui\";\nimport { useHistory, Link } from 'react-router-dom';\nimport  ListControl  from '../../controllers/ListControl';\nimport { AuthContext } from '../../auth/AuthContext';\nimport { types } from '../../types/types';\n//import { Link } from \"@wfp/ui\";\n\n// Home to display \"Cursos\"\nexport const HomeScreen = () => {\n    const { dispatch } = useContext(AuthContext);\n    const history = useHistory();\n    const [query, setQuery] = useState(0);\n    const limit = 3;\n    const path = 'courses'\n    const { loading, error, list, hasMore } = ListControl(query, limit, path);\n    const loader = useRef(null);\n    const observer = useRef()\n    const handleObserver = useCallback((node) => {\n        if (observer.current) observer.current.disconnect()\n        observer.current = new IntersectionObserver(entries => {\n            if (entries[0].isIntersecting && hasMore) {\n                setQuery((prev) => prev + limit);\n            }\n        })\n        if (node) observer.current.observe(node)\n    }, [hasMore]);\n\n    if(error){\n        console.log(error)\n        dispatch({\n            type: types.logout\n        });\n        history.replace('/auth/login');\n    }\n\n    const disCourse = ()=>{\n        let lists = list;\n        localStorage.setItem('courses', JSON.stringify(lists));\n        return lists.map((course) => (\n            (course.state_name==='activo') ?\n                (course.name_course==='RIESGOFAMI') ?\n                        <div ref={handleObserver} key={course.id}><Link to={ `/course/${ course.id }` }><img src=\"./assets/idRIESGOF.png\" alt={course.name_course} className=\"img-course\" /></Link></div>\n                    :\n                    <div ref={handleObserver} key={course.id}><Link to={ `/course/${ course.id }` }><img src={process.env.REACT_APP_ADMIN_URL+course.image_course} alt={course.name_course} className=\"img-course\" /></Link></div>\n                    :null\n        ));\n        \n    }\n    \n    return (\n        <div className=\"content\">\n            <div className=\"text-title\">Cursos</div>\n\n            \n            <div className=\"fund-main-enter\">\n                <Breadcrumb>\n                    <BreadcrumbItem>\n                        <Link to=\"/home\">\n                        <BreadcrumbHome />\n                        </Link>\n                    </BreadcrumbItem>\n                </Breadcrumb>\n                <div className=\"content-courses\" >\n                {list && disCourse() }\n                </div>\n                {loading && <p>Loading...</p>}\n                {error && <p>Error!</p>}\n                <div ref={loader} />\n            </div>\n        </div>\n    )\n}\n\n","import React from 'react'\n\nexport const AccountScreen = () => {\n    return (\n        <div>\n            <h1>Mis Datos</h1>\n            <hr />\n            \n        </div>\n    )\n}\n","import React from 'react'\n\nexport const LanguageScreen = () => {\n    return (\n        <div>\n            <h1>Mi Lengua</h1>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function CertificatesScreen() {\n    return (\n        <div>\n            <h1>Mis Certificados</h1>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport const ProgressScreen = () => {\n    return (\n        <div>\n            <h1>Mi Pogreso</h1>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport const InformationScreen = () => {\n    return (\n        <div>\n            <h1>Informacion EDUFAMI</h1>\n        </div>\n    )\n}\n","import React, {useContext, useState, useRef, useCallback} from 'react'\nimport { Breadcrumb , BreadcrumbHome, BreadcrumbItem } from \"@wfp/ui\";\nimport { useParams,useHistory, Link } from 'react-router-dom';\nimport  ListControl  from '../../controllers/ListControl';\nimport { AuthContext } from '../../auth/AuthContext';\nimport { types } from '../../types/types';\n\n// Home to display \"Unidades\"\nexport const UnitsScreen = () => {\n    const { dispatch } = useContext(AuthContext);\n    const history = useHistory();\n    const [query, setQuery] = useState(0);\n    const limit = 3;\n    const { cursoId } = useParams();\n    const path = 'course/units';\n    const pathType = 'course_id';\n    const course = (localStorage.getItem('course'))?JSON.parse(localStorage.getItem('course')):'';\n    const { loading, error, list, hasMore } = ListControl(query, limit, path, pathType, cursoId);\n    const loader = useRef(null);\n    const observer = useRef()\n    const handleObserver = useCallback((node) => {\n        if (observer.current) observer.current.disconnect()\n        observer.current = new IntersectionObserver(entries => {\n            if (entries[0].isIntersecting && hasMore) {\n                setQuery((prev) => prev + limit);\n            }\n        })\n        if (node) observer.current.observe(node)\n    }, [hasMore]);\n\n    if(error){\n        console.log(error)\n        dispatch({\n           type: types.logout\n        });\n        history.replace('/auth/login');\n    }\n\n    if(course===''){\n        history.replace('/home');\n    }\n\n    const disCourse = ()=>{\n        let lists = list;\n        console.log(lists)\n        return lists.map((course) => (\n            (course.state_name==='activo') ?\n                (course.name_course==='RIESGOFAMI') ?\n                        <div ref={handleObserver} key={course.id}><Link to=\"/home\"><img src=\"./assets/idRIESGOF.png\" alt={course.name_course} className=\"img-course\" /></Link></div>\n                    :\n                    <div ref={handleObserver} key={course.id}><Link to=\"/home\"><img src={process.env.REACT_APP_ADMIN_URL+course.image_unit} alt={course.name_course} className=\"img-course\" /></Link></div>\n                    :null\n                ));\n        \n    }\n    \n    return (\n        <div className=\"content\">\n            <div className=\"text-title\">{course && course.name_course}</div>\n\n            \n            <div className=\"fund-main-enter\">\n                <Breadcrumb>\n                    <BreadcrumbItem>\n                        <Link to=\"/home\">\n                        <BreadcrumbHome />\n                        </Link>\n                    </BreadcrumbItem>\n                    <BreadcrumbItem >\n                        <Link to={`/course/${cursoId}`}>\n                        {course && course.name_course}\n                        </Link>\n                    </BreadcrumbItem>\n                    <BreadcrumbItem disableLink>\n                        Unidades\n                    </BreadcrumbItem>\n                </Breadcrumb>\n                <div className=\"content-courses\" >\n                {list && disCourse() }\n                </div>\n                {loading && <p>Loading...</p>}\n                {error && <p>Error!</p>}\n                <div ref={loader} />\n            </div>\n        </div>\n    )\n}\n\n","import React, {useContext, useState, useEffect} from 'react'\nimport { Breadcrumb , BreadcrumbHome, BreadcrumbItem } from \"@wfp/ui\";\nimport { useParams,useHistory,Link } from 'react-router-dom';\nimport { AuthContext } from '../../auth/AuthContext';\nimport { types } from '../../types/types';\nimport { Button } from \"@wfp/ui\";\n\n// Home to display \"Curso\"\nexport const CoursesScreen = () => {\n    const { dispatch } = useContext(AuthContext);\n    const history = useHistory();\n    const [cursoNombre, setCursoNombre] = useState('');\n    const [imgCourse, setImgCourse] = useState('');\n    const { cursoId } = useParams();\n    const list = JSON.parse(localStorage.getItem('courses'));\n    let course = ''\n\n    if(!list){\n        dispatch({\n           type: types.logout\n        });\n        history.replace('/home');\n    }\n    useEffect(() => {\n        if(course!==undefined){\n            setCursoNombre(course.name_course);\n            setImgCourse( (course.name_course==='RIESGOFAMI')?\"/assets/IN_riesgof.png\":process.env.REACT_APP_ADMIN_URL+course.image_course);\n            localStorage.setItem('course', JSON.stringify(course));\n        }\n        else{\n            history.replace('/home');\n        }\n        \n      }, [course]);\n\n    const disCourse = ()=>{\n        course = list.find(o => o.id == cursoId);\n        return (course)?\n            <div key={course.id} >\n                <img src={imgCourse} alt={course.name_course} className=\"img-course\" />\n                <div className=\"course-description\">{course.description_course}\n                    <div className=\"course-enter\">\n                        <Link to={ `/units/${ course.id }` }>\n                            <Button\n                                    id=\"btnIngresar\"\n                                    type=\"submit\"\n                                    className=\"btn m-1 btn-block btn-wfp-main\"\n                                >\n                                    Ingresar\n                            </Button>\n                        </Link>\n                    </div>\n                </div>\n            </div>\n            :null;\n        \n    }\n    \n    return (\n        <div className=\"content\">\n            <div className=\"text-title\">{cursoNombre}</div>\n                <Breadcrumb>\n                    <BreadcrumbItem>\n                        <Link to=\"/home\">\n                        <BreadcrumbHome />\n                        </Link>\n                    </BreadcrumbItem>\n                    <BreadcrumbItem disableLink>\n                        {cursoNombre}\n                    </BreadcrumbItem>\n                </Breadcrumb>\n                <div className=\"fund-main-course\">\n                <div className=\"content-course\" >\n                {list && disCourse() }\n                </div>\n            </div>\n        </div>\n    )\n}\n\n","import React from 'react';\nimport { Navbar } from '../components/ui/NavBar';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { HomeScreen } from '../components/home/HomeScreen';\nimport { AccountScreen } from '../components/account/AccountScreen';\nimport { LanguageScreen } from '../components/languages/LanguageScreen';\nimport CertificatesScreen from '../components/certificates/CertificatesScreen';\nimport { ProgressScreen } from '../components/progress/ProgressScreen';\nimport { InformationScreen } from '../components/information/InformationScreen';\nimport { UnitsScreen } from '../components/units/UnitsScreen';\nimport { CoursesScreen } from '../components/courses/CoursesScreen';\n\n// DashboardRoute used to display Routes\nexport const DashboardRoutes = () => {\n\n\n    return (\n        <>\n            <Navbar />\n\n            <div className=\"container mt-2\">\n                <Switch>\n                <Route exact path=\"/home\" component={ HomeScreen } />\n                <Route exact path=\"/account\" component={ AccountScreen } />\n                <Route exact path=\"/languages\" component={ LanguageScreen } />\n                <Route exact path=\"/certificates\" component={ CertificatesScreen } />\n                <Route exact path=\"/progress\" component={ ProgressScreen } />\n                <Route exact path=\"/information\" component={ InformationScreen } />\n                <Route exact path=\"/course/:cursoId\" component={ CoursesScreen } />\n                <Route exact path=\"/units/:cursoId\" component={ UnitsScreen } />\n                    <Redirect to=\"/home\" />\n                </Switch>\n            </div>\n\n\n        </>\n    )\n}\n","import React from 'react';\nimport { Footer } from \"@wfp/ui\";\n\n// Footer component\nexport const FooterMain = () => {\n    return (\n        <div className=\"footer-section\">\n        <Footer\n        logo={<div><img src=\"/assets/idWFPp.png\" alt=\"footer logo\" className=\"footer-img\"></img></div>}\n        logoExtended={<div></div>}\n        >\n            &nbsp;\n        </Footer>\n        </div>\n    )\n}\n","import React from 'react';\nimport { FooterMain } from '../footer/FooterMain';\nimport { Link } from 'react-router-dom';\n\n// Start Page Component\nexport const StartScreen = () => {\n    const hadlePress = (e) => {\n        e.currentTarget.classList.remove(\"btn-wfp-main\");\n        e.currentTarget.classList.add(\"btn-wfp-main-press\");\n    };\n    return (\n        <div className=\"fund-main\">\n            <img src=\"./assets/idEDUF.png\" alt=\"header\" className=\"img-head\"/>\n            <div className=\"text-main\">\n                Aprender con Edufami es muy facil\n                <br/>\n                Inicie su formacion Ahora\n                <br/>\n                <br/>\n                <Link \n                to=\"/auth/login\" \n                className=\"btn m-1 btn-block btn-outline-primary btn-wfp-main\"\n                onClick={hadlePress}\n                >\n                    Ingresar\n                </Link>\n            </div>\n            \n            <FooterMain />\n        </div>\n    )\n}\n","import axios from \"axios\";\n// Login with Api\nexport let signIn = async (userName, userPassword) => {\n\n  try {\n    const response = await axios.post(\n      process.env.REACT_APP_ADMIN_API_URL + \"/login?dni=\"+userName+\"&password=\"+userPassword,\n      {}\n    );\n    return response.data\n  } catch (error) {\n    throw error;\n  }\n};","import React, { useContext, useEffect } from 'react';\nimport { AuthContext } from '../../auth/AuthContext';\nimport { types } from '../../types/types';\nimport { useForm } from '../../hooks/useForm';\nimport { useLocation, Link } from 'react-router-dom';\nimport queryString from 'query-string';\nimport { signIn } from \"../../controllers/basicAuth\";\nimport { FooterMain } from '../footer/FooterMain';\nimport { Form, TextInput, Button  } from \"@wfp/ui\";\n\n// Login component\nexport const LoginScreen = ({ history }) => {\n\n    const { dispatch } = useContext( AuthContext );\n    const location = useLocation();\n    const { q = '' } = queryString.parse( location.search );\n    const [ formValues, handleInputChange ] = useForm({\n        userName: q\n    });\n    const { userName } = formValues;\n\n    useEffect(() => {\n        document.getElementById('userName-error-msg').style.display=\"none\";\n        document.getElementById('userPassword-error-msg').style.display=\"none\";\n    }, [])\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const btnIngreso = document.getElementById(\"btnIngresar\");\n        btnIngreso.classList.remove(\"btn-wfp-main\");\n        btnIngreso.classList.add(\"btn-wfp-main-press\");\n        \n        const lastPath = localStorage.getItem('lastPath') || '/home';\n        let userPassword = document.getElementById('userPassword').value;\n        let userNameErr = document.getElementById('userName');\n        if(userName===\"\"){ \n            userNameErr.classList.add(\"is-invalid\");\n            document.getElementById('userName-error-msg').classList.add(\"wfp--form-requirement-show\");\n            document.getElementById('userName-error-msg').style.display=\"block\";\n        }\n        else{\n            userNameErr.classList.remove(\"is-invalid\");\n            document.getElementById('userName-error-msg').classList.remove(\"wfp--form-requirement-show\");\n        }\n        let userPasswordErr = document.getElementById('userPassword');\n        if(userPassword===\"\"){\n            userPasswordErr.classList.add(\"is-invalid\");\n            document.getElementById('userPassword-error-msg').classList.add(\"wfp--form-requirement-show\");\n            document.getElementById('userPassword-error-msg').style.display=\"block\";\n        }\n        else{\n            userPasswordErr.classList.remove(\"is-invalid\");\n            document.getElementById('userPassword-error-msg').classList.remove(\"wfp--form-requirement-show\");\n            \n        }\n        if(userName!==\"\" && userPassword!==\"\"){\n            let dataLog =  signIn(userName,userPassword);\n            dataLog.then((e)=>{\n                dispatch({\n                    type: types.login,\n                    payload: {\n                        name: e.data.user.name,\n                        token: e.data.access_token\n                    }\n                });\n\n                history.replace( lastPath );\n            })\n            .catch((e)=>{\n                console.warn(e);\n                let invalidMessage = document.getElementById('invalidMessage');\n                invalidMessage.classList.add(\"invalid-tooltip-active\");\n            });\n        }\n        \n\n        \n    }\n\n    const hadlePress = (e) => {\n        e.currentTarget.classList.remove(\"btn-wfp-main\");\n        e.currentTarget.classList.add(\"btn-wfp-main-press\");\n    };\n\n    return (\n        <div className=\"fund-main\">\n            <img src=\"/assets/idEDUF.png\" alt=\"header\" className=\"img-head\"/>\n            <div className=\"text-login-main\">\n                <Form onSubmit={ handleSubmit } className=\"needs-validation\">\n                    <strong id=\"invalidMessage\" className=\"invalid-feedback\">\n                        * Identificación y/o Contraseña invalidas\n                    </strong>\n                    \n                    <TextInput\n                        placeholder=\"Identificación\"\n                        className=\"form-control txt-input\"\n                        name=\"userName\"\n                        id=\"userName\"\n                        autoComplete=\"off\"\n                        value={ userName }\n                        onChange={ handleInputChange }\n                        invalid={{\n                            message: ''\n                            }}\n                        invalidText=\"Identificación requerido\"\n                        required\n                    />\n                        \n                    <TextInput\n                        type=\"password\"\n                        placeholder=\"Contraseña\"\n                        className=\"form-control mb-3 txt-input\"\n                        id=\"userPassword\"\n                        name=\"userPassword\"\n                        autoComplete=\"off\"\n                        invalid={{\n                            message: ''\n                            }}\n                        invalidText=\"Contraseña requerida\"\n                        required\n                    />\n                    <br/>\n                    <Button\n                        id=\"btnIngresar\"\n                        type=\"submit\"\n                        className=\"btn m-1 btn-block btn-wfp-main\"\n                    >\n                        Ingresar\n                    </Button>\n                    <br/>\n                    <br/>\n                    ¿Aun no se ha registrado?\n                    <br/>\n                    Por favor registrese\n                    <br/>\n                    <br/>\n                    <Link to={ `/auth/registry` }\n                        className=\"btn m-1 btn-block btn-wfp-main\"\n                        onClick={hadlePress}\n                    >\n                        Registrarse\n                    </Link>\n                    \n                </Form>\n            </div>\n\n            <FooterMain />\n\n        </div>\n    )\n}\n","import { useState } from 'react';\n\n// Hook to use in forms components\nexport const useForm = ( initialState = {} ) => {\n    \n    const [values, setValues] = useState(initialState);\n\n    const reset = () => {\n        setValues( initialState );\n    }\n\n\n    const handleInputChange = ({ target }) => {\n\n        setValues({\n            ...values,\n            [ target.name ]: target.value\n        });\n\n    }\n\n    return [ values, handleInputChange, reset ];\n\n}","import axios from \"axios\";\n// Register with API\nexport let registerUser = async (userName,userEmail,userDni,userPassword,userConfPassword) => {\n\n  try {\n    const response = await axios.post(\n      process.env.REACT_APP_ADMIN_API_URL + `/register?name=${userName}&email=${userEmail}&password=${userPassword}&dni=${userDni}&password_confirmation=${userConfPassword}`,\n      {}\n    );\n    return response.data\n  } catch (error) {\n      console.log(error)\n    throw error;\n  }\n};","import React, { useContext, useEffect } from 'react';\nimport { AuthContext } from '../../auth/AuthContext';\nimport { types } from '../../types/types';\nimport { registerUser } from '../../controllers/registerUser';\nimport { FooterMain } from '../footer/FooterMain';\nimport { Form, TextInput, Button  } from \"@wfp/ui\";\nimport { Link } from 'react-router-dom';\n\n// Registration component\nexport const RegisterScreen = ({ history }) => {\n\n    const { dispatch } = useContext( AuthContext );\n\n    useEffect(() => {\n        document.getElementById('userName-error-msg').style.display=\"none\";\n        document.getElementById('userEmail-error-msg').style.display=\"none\";\n        document.getElementById('userPassword-error-msg').style.display=\"none\";\n        document.getElementById('userConfPassword-error-msg').style.display=\"none\";\n        document.getElementById('userDni-error-msg').style.display=\"none\";\n    }, [])\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const btnIngreso = document.getElementById(\"btnIngresar\");\n        btnIngreso.classList.remove(\"btn-wfp-main\");\n        btnIngreso.classList.add(\"btn-wfp-main-press\");\n        const lastPath = localStorage.getItem('lastPath') || '/';\n        let userNameMain = document.getElementById('userName');\n        let userName = userNameMain.value;\n        let userEmailMain = document.getElementById('userEmail');\n        let userEmail = userEmailMain.value;\n        let userPasswordMain = document.getElementById('userPassword');\n        let userPassword = userPasswordMain.value;\n        let userConfPasswordMain = document.getElementById('userConfPassword');\n        let userConfPassword = userConfPasswordMain.value;\n        let userDniMain = document.getElementById('userDni');\n        let userDni = userDniMain.value;\n        if(userName===\"\"){\n            userNameMain.classList.add(\"is-invalid\");\n            document.getElementById('userName-error-msg').style.display=\"block\";\n        }\n        else{\n            userNameMain.classList.remove(\"is-invalid\");\n            document.getElementById('userName-error-msg').style.display=\"none\";\n        }\n        if(userEmail===\"\"){\n            userEmailMain.classList.add(\"is-invalid\");\n            document.getElementById('userEmail-error-msg').style.display=\"block\";\n        }\n        else{\n            document.getElementById('userEmail-error-msg').style.display=\"none\";\n        }\n        if(userPassword===\"\"){\n            userPasswordMain.classList.add(\"is-invalid\");\n            document.getElementById('userPassword-error-msg').style.display=\"block\";\n        }\n        else{\n            document.getElementById('userPassword-error-msg').style.display=\"none\";\n        }\n        if(userConfPassword===\"\"){\n            userConfPasswordMain.classList.add(\"is-invalid\");\n            document.getElementById('userConfPassword-error-msg').style.display=\"block\";\n        }\n        else{\n            document.getElementById('userConfPassword-error-msg').style.display=\"none\";\n        }\n        if(userDni===\"\"){\n            userDniMain.classList.add(\"is-invalid\");\n            document.getElementById('userDni-error-msg').style.display=\"block\";\n        }\n        else{\n            document.getElementById('userDni-error-msg').style.display=\"none\";\n        }\n        let invalidMessage = document.getElementById('invalidMessage');\n        if(userPassword === userConfPassword){\n            if(userName!==\"\" && userEmail!==\"\" && userDni!==\"\" && userPassword!==\"\" && userConfPassword!==\"\"){\n                let dataLog = registerUser(userName,userEmail,userDni,userPassword,userConfPassword);\n                dataLog.then((e)=>{\n                    dispatch({\n                        type: types.login,\n                        payload: {\n                            name: e.data.user.name,\n                            token: e.data.access_token\n                        }\n                    });\n    \n                    history.replace( lastPath );\n                })\n                .catch((e)=>{\n                    console.warn(e);\n                });\n            }\n            invalidMessage.classList.remove(\"invalid-tooltip-active\");\n        }\n        else{\n            invalidMessage.classList.add(\"invalid-tooltip-active\");\n        }\n        \n        \n        \n    }\n\n    return (\n        <div className=\"fund-main\">\n            <Link to=\"/auth\"><img src=\"/assets/idEDUF.png\" alt=\"header\" className=\"img-head\"/></Link>\n            <div className=\"text-reg-main\">\n                <Form onSubmit={ handleSubmit } className=\"needs-validation\">\n                    <strong id=\"invalidMessage\" className=\"invalid-feedback\">\n                        * Contraseña y confirmacion de Contraseña deben ser iguales\n                    </strong>\n                    <TextInput\n                        placeholder=\"Nombre\"\n                        className=\"form-control txt-input\"\n                        name=\"userName\"\n                        id=\"userName\"\n                        autoComplete=\"off\"\n                        invalid={{\n                            message: ''\n                            }}\n                        invalidText=\"Nombre requerido\"\n                        required\n                    />\n\n                    <TextInput\n                        type=\"email\"\n                        placeholder=\"Email\"\n                        className=\"form-control txt-input\"\n                        name=\"userEmail\"\n                        id=\"userEmail\"\n                        autoComplete=\"off\"\n                        invalid={{\n                            message: ''\n                            }}\n                        invalidText=\"Email requerido\"\n                        required\n                    />\n\n                    <TextInput\n                        placeholder=\"Identificacion\"\n                        className=\"form-control txt-input\"\n                        name=\"userDni\"\n                        id=\"userDni\"\n                        autoComplete=\"off\"\n                        invalid={{\n                            message: ''\n                            }}\n                        invalidText=\"Identificación requerida\"\n                        required\n                    />\n\n                    <TextInput\n                        type=\"password\"\n                        placeholder=\"Contraseña\"\n                        className=\"form-control txt-input\"\n                        id=\"userPassword\"\n                        name=\"userPassword\"\n                        autoComplete=\"off\"\n                        invalid={{\n                            message: ''\n                            }}\n                        invalidText=\"Contraseña requerida\"\n                        required\n                    />\n\n                    <TextInput\n                        type=\"password\"\n                        placeholder=\"Confirma Contraseña\"\n                        className=\"form-control txt-input\"\n                        id=\"userConfPassword\"\n                        name=\"userConfPassword\"\n                        autoComplete=\"off\"\n                        invalid={{\n                            message: ''\n                            }}\n                        invalidText=\"Confirmación requerida\"\n                        required\n                    />\n\n                    <Button\n                        id=\"btnIngresar\"\n                        type=\"submit\"\n                        className=\"btn m-1 btn-block btn-outline-primary btn-wfp-main\"\n                    >\n                        Registrarse\n                    </Button>\n                </Form>\n            </div>\n\n            <FooterMain />\n\n        </div>\n    )\n}\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { StartScreen } from '../components/start/StartScreen';\nimport { LoginScreen } from '../components/login/LoginScreen';\nimport { RegisterScreen } from '../components/register/RegisterScreen';\n\n\n// DashboardRoute used to display Routes\nexport const DashboardPublicRoutes = () => {\n\n\n    return (\n        <Switch>\n            <Route exact path=\"/auth\" component={ StartScreen } />\n            <Route exact path=\"/auth/login\" component={ LoginScreen } />\n            <Route exact path=\"/auth/registry\" component={ RegisterScreen } />\n            <Redirect to=\"/\" />\n        </Switch>\n    )\n}\n","import React, { useContext } from 'react'\nimport {\n    BrowserRouter as Router,\n    Switch\n  } from 'react-router-dom';\n\nimport { AuthContext } from '../auth/AuthContext';\nimport { PrivateRoute } from './PrivateRoute';\nimport { PublicRoute } from './PublicRoute';\nimport { DashboardRoutes } from './DashboardRoutes';\nimport { DashboardPublicRoutes } from './DashboardPublicRoutes';\n\n// Main App Route to display all routes\nexport const AppRouter = () => {\n\n    const { user } = useContext(AuthContext);\n\n    return (\n        <Router>\n            <div>\n                <Switch> \n                    <PublicRoute \n                        path=\"/auth\" \n                        component={ DashboardPublicRoutes } \n                        isAuthenticated={ user.logged }\n                    />\n                    \n                    <PrivateRoute \n                        path=\"/\" \n                        component={ DashboardRoutes } \n                        isAuthenticated={ user.logged }\n                    />\n                    \n                </Switch>\n            </div>\n        </Router>\n    )\n}\n","import { types } from '../types/types';\n\n// Authentication with Reducer\nexport const authReducer = (state = {}, action ) => {\n\n    switch ( action.type ) {\n        case types.login:\n            localStorage.setItem('userToken', action.payload.token);\n            return {\n                ...action.payload,\n                logged: true\n            }\n\n        case types.logout:\n            localStorage.removeItem(\"userToken\");\n            return {\n                logged: false\n            }\n    \n        default:\n            return state;\n    }\n\n}","import React, { useReducer, useEffect } from 'react'\nimport { AppRouter } from './routers/AppRouter'\nimport { AuthContext } from './auth/AuthContext'\nimport { authReducer } from './auth/authReducer'\nimport './styles/App.scss';\n\nconst init = () => {\n    return JSON.parse(localStorage.getItem('user')) || { logged: false };\n}\n\n\nexport const App = () => {\n    \n    const [ user, dispatch ] = useReducer(authReducer, {}, init);\n\n    useEffect(() => {\n        localStorage.setItem( 'user', JSON.stringify(user) );\n    }, [user])\n\n    return (\n\n        <AuthContext.Provider value={{ user, dispatch }}>\n            <AppRouter />\n        </AuthContext.Provider>\n\n    )\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}